package com.tneciv.poseidon.dao;

import com.tneciv.poseidon.entity.Journal;
import com.tneciv.poseidon.entity.JournalExample;
import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface JournalMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @SelectProvider(type=JournalSqlProvider.class, method="countByExample")
    long countByExample(JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @DeleteProvider(type=JournalSqlProvider.class, method="deleteByExample")
    int deleteByExample(JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @Delete({
        "delete from journal",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @Insert({
        "insert into journal (id, title, ",
        "journal_id, key_words, ",
        "vol_cover_img, tracks, ",
        "relative_vols, vol_date, ",
        "create_time, vol_desc)",
        "values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{journalId,jdbcType=INTEGER}, #{keyWords,jdbcType=VARCHAR}, ",
        "#{volCoverImg,jdbcType=VARCHAR}, #{tracks,jdbcType=VARCHAR}, ",
        "#{relativeVols,jdbcType=VARCHAR}, #{volDate,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{volDesc,jdbcType=LONGVARCHAR})"
    })
    int insert(Journal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @InsertProvider(type=JournalSqlProvider.class, method="insertSelective")
    int insertSelective(Journal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @SelectProvider(type=JournalSqlProvider.class, method="selectByExampleWithBLOBs")
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="journal_id", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="key_words", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_cover_img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="tracks", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="relative_vols", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_date", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="create_time", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="vol_desc", javaType=String.class, jdbcType=JdbcType.LONGVARCHAR)
    })
    List<Journal> selectByExampleWithBLOBs(JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @SelectProvider(type=JournalSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="journal_id", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="key_words", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_cover_img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="tracks", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="relative_vols", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_date", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="create_time", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP)
    })
    List<Journal> selectByExample(JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, title, journal_id, key_words, vol_cover_img, tracks, relative_vols, vol_date, ",
        "create_time, vol_desc",
        "from journal",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="journal_id", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="key_words", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_cover_img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="tracks", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="relative_vols", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="vol_date", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="create_time", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="vol_desc", javaType=String.class, jdbcType=JdbcType.LONGVARCHAR)
    })
    Journal selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @UpdateProvider(type=JournalSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Journal record, @Param("example") JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @UpdateProvider(type=JournalSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") Journal record, @Param("example") JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @UpdateProvider(type=JournalSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Journal record, @Param("example") JournalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @UpdateProvider(type=JournalSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Journal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @Update({
        "update journal",
        "set title = #{title,jdbcType=VARCHAR},",
          "journal_id = #{journalId,jdbcType=INTEGER},",
          "key_words = #{keyWords,jdbcType=VARCHAR},",
          "vol_cover_img = #{volCoverImg,jdbcType=VARCHAR},",
          "tracks = #{tracks,jdbcType=VARCHAR},",
          "relative_vols = #{relativeVols,jdbcType=VARCHAR},",
          "vol_date = #{volDate,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "vol_desc = #{volDesc,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(Journal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table journal
     *
     * @mbg.generated
     */
    @Update({
        "update journal",
        "set title = #{title,jdbcType=VARCHAR},",
          "journal_id = #{journalId,jdbcType=INTEGER},",
          "key_words = #{keyWords,jdbcType=VARCHAR},",
          "vol_cover_img = #{volCoverImg,jdbcType=VARCHAR},",
          "tracks = #{tracks,jdbcType=VARCHAR},",
          "relative_vols = #{relativeVols,jdbcType=VARCHAR},",
          "vol_date = #{volDate,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Journal record);
}