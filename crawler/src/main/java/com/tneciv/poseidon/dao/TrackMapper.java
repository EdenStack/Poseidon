package com.tneciv.poseidon.dao;

import com.tneciv.poseidon.entity.Track;
import com.tneciv.poseidon.entity.TrackExample;
import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TrackMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @SelectProvider(type=TrackSqlProvider.class, method="countByExample")
    long countByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TrackSqlProvider.class, method="deleteByExample")
    int deleteByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @Delete({
        "delete from track",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @Insert({
        "insert into track (id, track_id, ",
        "name, artist, cover_img, ",
        "album, mp3_url_suffix, ",
        "create_time)",
        "values (#{id,jdbcType=INTEGER}, #{trackId,jdbcType=INTEGER}, ",
        "#{name,jdbcType=VARCHAR}, #{artist,jdbcType=VARCHAR}, #{coverImg,jdbcType=VARCHAR}, ",
        "#{album,jdbcType=VARCHAR}, #{mp3UrlSuffix,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @InsertProvider(type=TrackSqlProvider.class, method="insertSelective")
    int insertSelective(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @SelectProvider(type=TrackSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="track_id", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="artist", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="cover_img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="album", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="mp3_url_suffix", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="create_time", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP)
    })
    List<Track> selectByExample(TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, track_id, name, artist, cover_img, album, mp3_url_suffix, create_time",
        "from track",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ConstructorArgs({
        @Arg(column="id", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="track_id", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="name", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="artist", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="cover_img", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="album", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="mp3_url_suffix", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="create_time", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP)
    })
    Track selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TrackSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Track record, @Param("example") TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TrackSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Track record, @Param("example") TrackExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TrackSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Track record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table track
     *
     * @mbg.generated
     */
    @Update({
        "update track",
        "set track_id = #{trackId,jdbcType=INTEGER},",
          "name = #{name,jdbcType=VARCHAR},",
          "artist = #{artist,jdbcType=VARCHAR},",
          "cover_img = #{coverImg,jdbcType=VARCHAR},",
          "album = #{album,jdbcType=VARCHAR},",
          "mp3_url_suffix = #{mp3UrlSuffix,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Track record);
}